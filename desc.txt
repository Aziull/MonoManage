Мета
Розробити систему для відслідковування витрат людей, що дозволяє користувачам зберігати та аналізувати фінансові дані з різних грошових рахунків, таких як готівкові кошти та рахунки в різних банках (наприклад, Монобанк). Система повинна підтримувати управління транзакціями, включаючи можливість помічати деякі транзакції як видалені (але зберігати їх у базі даних) або видаляти їх повністю.

Основні компоненти
Користувачі:

Кожен користувач має унікальний обліковий запис.
Користувач може мати кілька грошових рахунків.
Грошові рахунки:

Рахунки можуть бути готівковими або банківськими (наприклад, Монобанк).
Кожен рахунок має унікальний ідентифікатор і належить певному користувачу.
Транзакції:

Кожна транзакція пов'язана з певним рахунком.
Транзакції мають такі атрибути: дата, сума, опис, тип (витрати або доходи).
Деякі транзакції можуть бути помічені як видалені, але залишатися в базі даних для можливого відновлення або аналізу.
Помічені як видалені: Транзакції, що мають бути приховані від основного відображення, але зберігаються для можливого відновлення (наприклад, помилкові транзакції).
Деякі транзакції можуть бути видалені повністю.
Видалені повністю: Транзакції, які більше не потрібні і повинні бути остаточно видалені з бази даних (наприклад, дублікати або старі, непотрібні записи).
Функціональні можливості
Користувачі можуть:

Створювати, редагувати та видаляти грошові рахунки.
Додавати, редагувати та видаляти транзакції для кожного рахунку.
Помічати транзакції як видалені або повертати їх до активного стану.
Переглядати історію транзакцій з можливістю фільтрації та сортування за різними параметрами.
Експортувати звіти про витрати у форматах CSV або PDF.
Аналізувати витрати за категоріями, періодами та іншими параметрами.
Система забезпечує:

Захист даних користувачів за допомогою аутентифікації та авторизації.
Надійне зберігання даних з можливістю відновлення видалених транзакцій.
Інтуїтивно зрозумілий інтерфейс для управління рахунками та транзакціями.
Аналітичні інструменти для візуалізації витрат та доходів користувачів.
Приклад сценарію використання
Реєстрація користувача: Користувач реєструє новий обліковий запис у системі.
Створення рахунку: Користувач додає новий банківський рахунок з інформацією про банк та тип рахунку.
Додавання транзакцій: Користувач додає транзакції (витрати та доходи) до свого рахунку.
Помічення транзакції як видаленої: Користувач помічає транзакцію як видалену через помилку, але вона залишається у базі даних для можливого відновлення.
Повне видалення транзакції: Користувач вирішує, що певна транзакція більше не потрібна, і видаляє її повністю з бази даних.
Аналіз витрат: Користувач використовує інструменти аналітики для перегляду своїх витрат за місяць та визначення основних категорій витрат.


1. Визначення сутностей та атрибутів
На основі постанови задачі визначимо основні сутності та їх атрибути:

Користувач (User):

UserID (PRIMARY KEY)
Username
Password
Email
CreatedDate
Рахунок (Account):

AccountID (PRIMARY KEY)
UserID (FOREIGN KEY)
AccountName
AccountType (Cash, Bank, etc.)
BankName (якщо тип рахунку - банківський)
CreatedDate
Транзакція (Transaction):

TransactionID (PRIMARY KEY)
AccountID (FOREIGN KEY)
Amount
TransactionType (Expense, Income)
Description
TransactionDate
IsDeleted (позначка, чи транзакція видалена)
DeletedDate (дата видалення, якщо застосовується)

2. Створення ER-діаграми
На цьому етапі створюється ER-діаграма, яка показує зв’язки між сутностями.

[User]
  |
  | 1:N
  |
[Account]
  |
  | 1:N
  |
[Transaction]


3. Нормалізація
Застосування нормалізації для уникнення надлишковості даних:

1NF: Всі таблиці мають атомарні значення (кожне поле містить лише одне значення).
2NF: Всі неключові атрибути повністю залежать від первинного ключа.
3NF: Всі неключові атрибути залежать тільки від первинного ключа і не залежать від інших неключових атрибутів.